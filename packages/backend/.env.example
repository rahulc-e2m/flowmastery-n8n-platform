# ===============================
# BACKEND ENVIRONMENT CONFIG
# For independent backend deployment
# ===============================

# Application Settings
APP_NAME="FlowMastery Backend"
APP_VERSION="2.0.0"
DEBUG=false

# Server Configuration
HOST=0.0.0.0
PORT=8000

# Security - CRITICAL: Change these in production!
SECRET_KEY=your-secret-key-change-in-production-min-32-chars-for-jwt-signing
ACCESS_TOKEN_EXPIRE_MINUTES=4320
ALGORITHM=HS256

# Database Configuration
# For local development: postgresql+asyncpg://postgres:postgres@localhost:5432/metrics_dashboard
# For production: postgresql+asyncpg://username:password@your-db-host:5432/your_database
DATABASE_URL=postgresql+asyncpg://postgres:postgres@localhost:5432/metrics_dashboard
DB_ECHO=false

# Redis Cache Configuration
# For local development: redis://localhost:6379/0
# For production: redis://username:password@your-redis-host:6379/0
REDIS_URL=redis://localhost:6379/0
CACHE_TTL=300

# CORS Origins (comma-separated list)
# Add your frontend URLs here
CORS_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:5176,https://your-frontend-domain.com

# Email Configuration (for user invitations)
# Gmail SMTP example - replace with your email service
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password-or-oauth-token
SMTP_USE_TLS=true
FROM_EMAIL=noreply@flowmastery.com

# Frontend URL (for invitation links)
# This should point to your deployed frontend
FRONTEND_URL=http://localhost:3000

# n8n Integration (Optional)
# If you have an n8n instance to connect to
N8N_API_URL=https://your-n8n-instance.com/api/v1
N8N_API_KEY=your-n8n-api-key-here

# AI Services (Optional)
# Only needed if using AI features
GEMINI_API_KEY=your-gemini-api-key-optional
OPENAI_API_KEY=your-openai-api-key-optional

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=json

# Monitoring Configuration
ENABLE_METRICS=true
METRICS_PORT=9090

# Rate Limiting
RATE_LIMIT_PER_MINUTE=60

# Encryption Key for sensitive data (n8n API keys, etc.)
# Generate a 32-character random string
ENCRYPTION_KEY=your-32-char-encryption-key-here!!